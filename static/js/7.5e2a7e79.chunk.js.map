{"version":3,"sources":["components/ContactList.js","components/Filter.js","components/Form.js","components/Modal.js","pages/ContactsPage.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","paper","ContactList","contacts","onDelete","classes","className","List","map","id","name","number","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","onClick","Filter","filterValue","onChange","TextField","label","type","value","variant","Form","onCloseModal","useState","contactName","setContactName","setNumber","useGetContactsQuery","data","useAddContactMutation","addContact","handleInputChange","event","currentTarget","reset","autoComplete","onSubmit","preventDefault","find","contact","toLowerCase","alert","pattern","title","required","Modal","children","useEffect","handleKeydown","e","code","window","addEventListener","removeEventListener","target","ContactsPage","filter","setFilter","showModal","setShowModal","useDeleteContactMutation","deleteContact","toggleModal","prev","Tooltip","color","fontSize","normalizedFilter","includes","getFilteredContacts"],"mappings":"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","file":"static/js/7.5e2a7e79.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: 400,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function ContactList({ contacts, onDelete }) {\n    const classes = useStyles();\n\n    return (\n        <div >\n            <div className={classes.root}>\n                <div >\n                    <List>\n                        {contacts.map(({ id, name, number }) => {\n                            return (\n                                <ListItem key={id}>\n                                    <ListItemText primary={name} secondary={number} />\n                                    <ListItemSecondaryAction>\n                                        <IconButton\n                                            edge=\"start\"\n                                            aria-label=\"delete\"\n                                            onClick={() => onDelete(id)}\n                                        >\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </div>\n            </div>\n        </div>\n    );\n}","import TextField from '@material-ui/core/TextField';\n\n\n\nexport default function Filter({ filterValue, onChange }) {\n    return (\n        <div >\n            <TextField\n                id=\"text\"\n                label=\"Find Contact...\"\n                type=\"text\"\n                value={filterValue}\n                onChange={onChange}\n                variant=\"filled\"\n            />\n        </div>\n    );\n}","import { useState } from 'react';\nimport {\n    useGetContactsQuery,\n    useAddContactMutation,\n} from '../redux/phonebookApi';\n\n\n\nexport default function Form({ onCloseModal }) {\n    const [contactName, setContactName] = useState('');\n    const [number, setNumber] = useState('');\n    const { data: contacts } = useGetContactsQuery();\n    const [addContact] = useAddContactMutation();\n\n    const handleInputChange = event => {\n        const { name, value } = event.currentTarget;\n        switch (name) {\n            case 'name':\n                setContactName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (contacts) {\n            const isExistedName = contacts.find(\n                contact => contact.name.toLowerCase() === contactName.toLowerCase(),\n            );\n\n            if (isExistedName) {\n                alert(contactName + ' is already in your contacts');\n                return;\n            }\n\n            addContact({ name: contactName, number });\n        }\n        reset();\n        onCloseModal();\n    };\n\n    const reset = () => {\n        setContactName('');\n        setNumber('');\n    };\n\n    return (\n        <form  autoComplete=\"off\" onSubmit={handleSubmit}>\n            <label>\n                Name\n                <input\n\n                    type=\"text\"\n                    name=\"name\"\n                    value={contactName}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    onChange={handleInputChange}\n                    required\n                />\n            </label>\n\n            <label >\n                Phone Number\n                <input\n\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    onChange={handleInputChange}\n                    required\n                />\n            </label>\n            <button  type=\"submit\">\n                Add Contact\n            </button>\n        </form>\n    );\n}","import { useEffect } from 'react';\n\n\n\nexport default function Modal({ children, onCloseModal }) {\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeydown);\n\n        function handleKeydown(e) {\n            if (e.code === 'Escape') {\n                onCloseModal();\n            }\n        }\n\n        return () => window.removeEventListener('keydown', handleKeydown);\n    }, [onCloseModal]);\n\n    const handleBackDropClick = e => {\n        if (e.currentTarget === e.target) {\n            onCloseModal();\n        }\n    };\n\n    return (\n        <div onClick={handleBackDropClick} >\n            <div>{children}</div>\n        </div>\n    );\n}","import { useState } from 'react';\n\nimport { IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\nimport Form from '../components/Form';\nimport Modal from '../components/Modal';\nimport {\n    useGetContactsQuery,\n    useDeleteContactMutation,\n} from '../redux/phonebookApi';\n\n\n\nexport default function ContactsPage() {\n    const [filter, setFilter] = useState('');\n    const [showModal, setShowModal] = useState(false);\n    const { data: contacts } = useGetContactsQuery();\n    const [deleteContact] = useDeleteContactMutation();\n\n    const handleFilterOnChange = e => {\n        setFilter(e.target.value);\n    };\n\n    const getFilteredContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        const filteredContacts = contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n        return filteredContacts;\n    };\n\n    const toggleModal = () => {\n        setShowModal(prev => !prev);\n    };\n\n    return (\n        <>\n            <div >\n                <Filter filterValue={filter} onChange={handleFilterOnChange} />\n\n                <div >\n                    <IconButton edge=\"start\" aria-label=\"delete\" onClick={toggleModal}>\n                        <Tooltip title=\"Add new Contact\" aria-label=\"add\">\n                            <AddIcon color=\"secondary\" fontSize=\"large\" />\n                        </Tooltip>\n                    </IconButton>\n                </div>\n            </div>\n\n            {contacts && (\n                <ContactList\n                    contacts={getFilteredContacts()}\n                    onDelete={deleteContact}\n                />\n            )}\n\n            {showModal && (\n                <Modal onCloseModal={toggleModal}>\n                    <Form onCloseModal={toggleModal} />\n                </Modal>\n            )}\n        </>\n    );\n}"],"sourceRoot":""}