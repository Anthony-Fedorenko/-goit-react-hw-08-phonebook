{"version":3,"sources":["redux/authSlice.js","redux/userApi.js","redux/phonebookApi.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/Container.js","components/Layout.js","components/AuthNav/AuthNav.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AppBar.js","components/PrivateRout.js","components/PublicRout.js","App.js","redux/store.js","index.js"],"names":["initState","user","name","email","token","isLoggedIn","authSlice","createSlice","initialState","reducers","setCredentials","state","payload","removeCredentials","setCurrentUser","actions","getUserName","auth","getToken","getIsLogedIn","usersApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","set","tagTypes","endpoints","builder","getCurrentUser","query","providesTags","signupUser","mutation","url","method","body","password","transformResponse","response","data","invalidatesTags","loginUser","logoutUser","useGetCurrentUserQuery","useSignupUserMutation","useLoginUserMutation","useLogoutUserMutation","contactsApi","getContacts","addContact","number","deleteContact","id","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","module","exports","Container","children","Layout","AuthNav","to","className","styles","link","Navigation","useSelector","exact","UserMenu","dispatch","useDispatch","logOut","span","Button","variant","color","type","size","onClick","AppBar","isToken","useEffect","PrivateRoute","redirectTo","routeProps","isLogedIn","PublicRoute","restricted","routProps","renderFlag","HomePage","lazy","RegistrationPage","LoginPage","ContactsPage","useStyles","makeStyles","theme","root","width","marginTop","spacing","App","classes","fallback","LinearProgress","path","userPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b075498d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initState = {\n    user: {\n        name: null,\n        email: null,\n    },\n    token: null,\n    isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: initState,\n    reducers: {\n        setCredentials: (state, { payload: { user, token } }) => {\n            state.user = user;\n            state.token = token;\n            state.isLoggedIn = true;\n        },\n        removeCredentials: () => initState,\n        setCurrentUser: (state, { payload }) => {\n            state.user = { ...payload };\n            state.isLoggedIn = true;\n        },\n    },\n});\n\nexport default authSlice.reducer;\n\nexport const { setCredentials, removeCredentials, setCurrentUser } =\n    authSlice.actions;\n\nexport const getUserName = state => state.auth.user.name;\nexport const getToken = state => state.auth.token;\nexport const getUser = state => state.auth.user;\nexport const getIsLogedIn = state => state.auth.isLoggedIn;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const usersApi = createApi({\n    reducerPath: 'usersApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl: 'https://connections-api.herokuapp.com/',\n        prepareHeaders: (headers, { getState }) => {\n            const token = getState().auth.token;\n            if (token) {\n                headers.set('authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    tagTypes: ['Users'],\n    endpoints: builder => ({\n        getCurrentUser: builder.query({\n            query: () => '/users/current',\n            providesTags: ['Users'],\n        }),\n        signupUser: builder.mutation({\n            query: ({ name, email, password }) => ({\n                url: '/users/signup',\n                method: 'POST',\n                body: {\n                    name: name,\n                    email: email,\n                    password: password,\n                },\n                transformResponse: response => response.data,\n            }),\n            invalidatesTags: ['Users'],\n        }),\n        loginUser: builder.mutation({\n            query: ({ email, password }) => ({\n                url: '/users/login',\n                method: 'POST',\n                body: {\n                    email,\n                    password,\n                },\n            }),\n            invalidatesTags: ['Users'],\n        }),\n        logoutUser: builder.mutation({\n            query: () => ({\n                url: 'users/logout',\n                method: 'POST',\n            }),\n            invalidatesTags: ['Users'],\n        }),\n    }),\n});\n\nexport const {\n    useGetCurrentUserQuery,\n    useSignupUserMutation,\n    useLoginUserMutation,\n    useLogoutUserMutation,\n} = usersApi;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n    reducerPath: 'contactsApi',\n    baseQuery: fetchBaseQuery({\n        baseUrl: 'https://connections-api.herokuapp.com/',\n        prepareHeaders: (headers, { getState }) => {\n            const token = getState().auth.token;\n            if (token) {\n                headers.set('authorization', `Bearer ${token}`);\n            }\n            return headers;\n        },\n    }),\n    tagTypes: ['Contacts'],\n    endpoints: builder => ({\n        getContacts: builder.query({\n            query: () => '/contacts',\n            providesTags: ['Contacts'],\n        }),\n        addContact: builder.mutation({\n            query: ({ name, number }) => ({\n                url: '/contacts',\n                method: 'POST',\n                body: {\n                    name,\n                    number,\n                },\n            }),\n            invalidatesTags: ['Contacts'],\n        }),\n        deleteContact: builder.mutation({\n            query: id => ({\n                url: `/contacts/${id}`,\n                method: 'DELETE',\n            }),\n            invalidatesTags: ['Contacts'],\n        }),\n    }),\n});\n\nexport const {\n    useGetContactsQuery,\n    useAddContactMutation,\n    useDeleteContactMutation,\n} = contactsApi;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3L-OI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1JCPG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"UserMenu_span__3LTxG\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nconst Container = ({ children }) => {\n    return <div >{children}</div>;\n};\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from './Container';\n\nconst Layout = ({ children }) => (\n    <>\n        <Container>{children}</Container>\n    </>\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;","import { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css'\n\n\nexport default function AuthNav() {\n    return (\n        <div >\n            <NavLink\n                to=\"/register\"\n                className={styles.link}\n\n            >\n                Registration\n            </NavLink>\n\n            <NavLink\n                to=\"/login\"\n                className={styles.link}\n            >\n                LogIn\n            </NavLink>\n        </div>\n    );\n}","import { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsLogedIn } from '../../redux/authSlice';\nimport styles from './Navigation.module.css'\n\n\nconst Navigation = () => {\n    const isLoggedIn = useSelector(getIsLogedIn);\n\n    return (\n        <nav >\n            {isLoggedIn && (\n                <>\n                    <NavLink\n                        to=\"/home\"\n                        exact\n                        className={styles.link}\n                    >\n                        Home\n                    </NavLink>\n\n                    <NavLink\n                        to=\"/contacts\"\n                        className={styles.link}\n                    >\n                        Contacts\n                    </NavLink>\n                </>\n            )}\n        </nav>\n    );\n};\n\nexport default Navigation;","import { Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserName, removeCredentials } from '../../redux/authSlice';\nimport { useLogoutUserMutation } from '../../redux/userApi';\nimport styles from './UserMenu.module.css'\n\nexport default function UserMenu() {\n    const dispatch = useDispatch();\n    const name = useSelector(getUserName);\n    const [logOut] = useLogoutUserMutation();\n\n    const handleBtnClick = () => {\n        logOut();\n        dispatch(removeCredentials());\n    };\n\n    return (\n        <div >\n            <span className={styles.span}>Welcome, {name}</span>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                type=\"button\"\n                size=\"small\"\n                onClick={handleBtnClick}\n            >\n                Log Out\n            </Button>\n        </div>\n    );\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getToken, setCurrentUser } from '../redux/authSlice';\nimport { useGetCurrentUserQuery } from '../redux/userApi';\n\nimport AuthNav from './AuthNav/AuthNav';\nimport Navigation from './Navigation/Navigation';\nimport UserMenu from './UserMenu/UserMenu';\n\nimport { getIsLogedIn } from '../redux/authSlice';\n\n\n\nexport default function AppBar() {\n    const isLoggedIn = useSelector(getIsLogedIn);\n    const dispatch = useDispatch();\n    const isToken = useSelector(getToken);\n    const { data: user } = useGetCurrentUserQuery(isToken);\n\n    useEffect(() => {\n        if (isToken === null) return;\n        dispatch(setCurrentUser(user));\n    }, [isToken, dispatch, user]);\n\n    return (\n        <header >\n            <Navigation />\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\n        </header>\n    );\n}","import { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getIsLogedIn } from '../redux/authSlice';\n\nexport default function PrivateRoute({\n                                         children,\n                                         redirectTo = '/',\n                                         ...routeProps\n                                     }) {\n    const isLogedIn = useSelector(getIsLogedIn);\n    return (\n        <Route {...routeProps}>\n            {isLogedIn ? children : <Redirect to={redirectTo} />}\n        </Route>\n    );\n}","import { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getIsLogedIn } from '../redux/authSlice';\n\nexport default function PublicRoute({\n                                        children,\n                                        restricted = false,\n                                        redirectTo = '/',\n                                        ...routProps\n                                    }) {\n    const isLogedIn = useSelector(getIsLogedIn);\n    const renderFlag = isLogedIn && restricted;\n    return (\n        <Route {...routProps}>\n            {renderFlag ? <Redirect to={redirectTo} /> : children}\n        </Route>\n    );\n}","import { Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport './App.css'\n\nimport Layout from './components/Layout';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRout';\nimport PublicRoute from './components/PublicRout';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LinearProgress } from '@material-ui/core';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegistrationPage = lazy(() => import('./pages/RegistrationPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n      <Layout>\n        <AppBar />\n\n        <Suspense\n            fallback={\n              <div className={classes.root}>\n                <LinearProgress color=\"secondary\" />\n              </div>\n            }\n        >\n          <Switch>\n            <PublicRoute path=\"/\" exact>\n              <h1>Hello, start to work</h1>\n            </PublicRoute>\n\n            <PublicRoute path=\"/register\" redirectTo=\"/login\" restricted>\n              <RegistrationPage />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\n              <LoginPage />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/home\">\n              <HomePage />\n            </PrivateRoute>\n\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsPage />\n            </PrivateRoute>\n          </Switch>\n        </Suspense>\n      </Layout>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { contactsApi } from './phonebookApi';\nimport { usersApi } from './userApi';\nimport auth from './authSlice';\n\nconst userPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\nexport const store = configureStore({\n    reducer: {\n        [contactsApi.reducerPath]: contactsApi.reducer,\n        [usersApi.reducerPath]: usersApi.reducer,\n        auth: persistReducer(userPersistConfig, auth),\n    },\n    middleware: getDefaultMiddleware => [\n        ...getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }),\n        contactsApi.middleware,\n        usersApi.middleware,\n    ],\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <PersistGate loading={null} persistor={persistor}>\n                    <App />\n                </PersistGate>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}